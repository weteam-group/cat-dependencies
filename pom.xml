<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cn.lakex</groupId>
    <artifactId>cat-dependencies</artifactId>
    <version>0.0.3-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>cat-dependencies</name>
    <description>
        cat-spring framework maven dependencies management
    </description>

    <url>https://cat.lakex.cn</url>
    <licenses>
        <license>
            <name>The LGPL License</name>
            <url>https://www.gnu.org/licenses/lgpl-3.0.html</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>LarryKoo</name>
            <email>gumutianqi@gmail.com</email>
        </developer>
    </developers>

    <!-- Spring-Boot Starter Parent -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.2</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>11</java.version>

        <!-- Maven Plugin -->
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.test.skip>true</maven.test.skip>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
        <maven-findbugs-maven-plugin.version>3.0.5</maven-findbugs-maven-plugin.version>
        <javadoc.skip>true</javadoc.skip>
        <gpg.skip>false</gpg.skip>

        <!-- ===================== The third party ===================== -->
        <!-- Spring Boot && Spring Cloud -->
        <mica.version>2.5.2</mica.version>
        <mica.pro.version>2021.0.2</mica.pro.version>
        <spring-boot.version>2.5.2</spring-boot.version>
        <spring-boot.admin.version>2.4.3</spring-boot.admin.version>
        <spring-cloud.version>2020.0.2</spring-cloud.version>
        <spring-cloud-alibaba.version>2021.1</spring-cloud-alibaba.version>
        <retrofit-spring-boot-starter.version>2.2.12</retrofit-spring-boot-starter.version>
        <hutool.version>5.7.5</hutool.version>

        <!-- Utils -->
        <lombok.version>1.18.20</lombok.version>
        <mica-auto.version>2.1.1</mica-auto.version>
        <okhttp3.version>4.9.1</okhttp3.version>
        <okio.version>2.10.0</okio.version>
        <jsoup.version>1.14.1</jsoup.version>
        <aspectjweaver.version>1.9.7</aspectjweaver.version>
        <vavr.version>0.10.4</vavr.version>

        <!-- swagger api doc -->
        <springfox-boot-starter.version>3.0.0</springfox-boot-starter.version>
        <swagger-annotations.v3.version>2.1.10</swagger-annotations.v3.version>

        <!-- Data Source -->
        <mysql-driver-6.version>6.0.6</mysql-driver-6.version> <!-- just version -->
        <mysql-driver-8.version>8,.0.26</mysql-driver-8.version> <!-- just version -->
        <jooq.version>3.15.1</jooq.version>

        <jjwt.version>0.9.1</jjwt.version>
        <alibaba.jetcache.version>2.6.0</alibaba.jetcache.version>
        <alibaba.easyexcel.version>2.2.7</alibaba.easyexcel.version>
        <alibaba.transmittable-thread-local.version>2.12.1</alibaba.transmittable-thread-local.version>

        <!-- Google OpenSources -->
        <google.guava.version>30.1.1-jre</google.guava.version>
        <google.guice.version>5.0.1</google.guice.version>
        <google.zxing.version>3.4.1</google.zxing.version>
        <google.tink.version>1.6.1</google.tink.version>
        <google.findbugs.version>3.0.1</google.findbugs.version>

        <!-- Java Util -->
        <javax.jsr311-api.version>1.1.1</javax.jsr311-api.version>
        <javax.validation.version>3.0.0</javax.validation.version>
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <hibernate-validator.version>7.0.1.Final</hibernate-validator.version>
        <jakarta.el.version>4.0.0</jakarta.el.version>

        <!-- WeChat Platform SDK -->
        <!-- https://github.com/Wechat-Group/WxJava -->
        <weixin-java-tools.version>4.1.0</weixin-java-tools.version> <!-- just version -->

        <!-- test -->
        <junit-jupiter.version>5.7.2</junit-jupiter.version>
    </properties>

    <!-- All basic dependency management -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>net.dreamlu</groupId>
                <artifactId>mica-bom</artifactId>
                <version>${mica.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>net.dreamlu</groupId>
                <artifactId>mica-dependencies</artifactId>
                <version>${mica.pro.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Spring Import -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>${spring-boot.admin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-bom</artifactId>
                <version>${hutool.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- 强制排查依赖 tomcat -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-tomcat</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- 强制排查依赖 logging -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- Junit 排查 vintage -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.github.lianjiatech</groupId>
                <artifactId>retrofit-spring-boot-starter</artifactId>
                <version>${retrofit-spring-boot-starter.version}</version>
            </dependency>

            <!-- Utils -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp3.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okio</groupId>
                <artifactId>okio</artifactId>
                <version>${okio.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectjweaver.version}</version>
            </dependency>
            <dependency>
                <groupId>io.vavr</groupId>
                <artifactId>vavr</artifactId>
                <version>${vavr.version}</version>
            </dependency>

            <!-- Swagger Api Doc -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>${springfox-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.v3.version}</version>
                <scope>compile</scope>
            </dependency>

            <!-- Data Source -->
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen</artifactId>
                <version>${jooq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-meta</artifactId>
                <version>${jooq.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <!-- Alibaba openSources -->
            <dependency>
                <groupId>com.alicp.jetcache</groupId>
                <artifactId>jetcache-core</artifactId>
                <version>${alibaba.jetcache.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${alibaba.easyexcel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>transmittable-thread-local</artifactId>
                <version>${alibaba.transmittable-thread-local.version}</version>
            </dependency>

            <!-- Google OpenSources -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${google.guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${google.guice.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>core</artifactId>
                <version>${google.zxing.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.crypto.tink</groupId>
                <artifactId>tink</artifactId>
                <version>${google.tink.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>findbugs</artifactId>
                <version>${google.findbugs.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>annotations</artifactId>
                <version>${google.findbugs.version}</version>
                <scope>compile</scope>
            </dependency>

            <!-- Java Util -->
            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>jsr311-api</artifactId>
                <version>${javax.jsr311-api.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.validation</groupId>
                <artifactId>jakarta.validation-api</artifactId>
                <version>3.0.0</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator-cdi</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.el</artifactId>
                <version>${jakarta.el.version}</version>
            </dependency>

            <!-- TestCase -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- build configuration -->
    <build>
        <defaultGoal>package</defaultGoal>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.yml</include>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                    <include>**/*.cfg</include>
                    <include>**/*.tld</include>
                    <include>**/*.xsd</include>
                    <include>**/*.csv</include>
                    <include>**/*.drl</include>
                    <include>**/*.txt</include>
                    <include>**/*.ftl</include>
                    <include>**/*.btl</include>
                    <include>**/*.json</include>
                    <include>**/*.factories</include>
                    <include>**/*.sql</include>
                    <include>**/*.md</include>
                    <include>**/*.db</include>
                    <include>**/*.types</include>
                    <include>**/*.jar</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <pluginManagement>
            <!-- Upgrade Maven super pom versions -->
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <inherited>true</inherited>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <compilerVersion>${java.version}</compilerVersion>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <showWarnings>true</showWarnings>
                        <compilerArgument>-Xlint:unchecked</compilerArgument>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>net.dreamlu</groupId>
                                <artifactId>mica-auto</artifactId>
                                <version>${mica-auto.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>${maven-findbugs-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>blade-vip</id>
            <url>http://nexus.bladex.vip/repository/maven-public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <!-- 基于 Profiles 的 灵活仓库配置 -->
    <profiles>
        <profile>
            <id>rdc</id>
            <distributionManagement>
                <repository>
                    <id>rdc-release</id>
                    <url>https://packages.aliyun.com/maven/repository/2022255-release-tukFBp/</url>
                </repository>
                <snapshotRepository>
                    <id>rdc-snapshots</id>
                    <url>https://packages.aliyun.com/maven/repository/2022255-snapshot-Ls0fsC/</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>
    </profiles>
</project>
